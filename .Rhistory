var(flips2)
?rbinom
rbinom
?rbinom
?pareto
??pareto
?random
??norm
<norm
?norm
?rnorm
stuff <- rnorm(1000, mean=0, sd=0.5)
stuff
hist(stuff)
mean(stuff)
stuff <- rnorm(10000, mean=0, sd=1.o)
stuff <- rnorm(10000, mean=0, sd=1.0
)
stuff <- rnorm(10000, mean=0, sd=1.0)
hist(stuff)
?rnorm
stuff <- rnorm(100000, mean=0, sd=1.0)
hist(stuff)
mean(stuff)
var(stuff)
library(swirl)
swirl()
quit()
swirl
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
submit()
students3
submit()
?spread
submit()
submit()
submit()
submit()
submit()
extract_numeric("class5")
?mutate
submit()
submit()
submit()
submit()
submit()
students4
submit()
?unique
submit()
submit()
submit()
submit()
submit()
submit()
submit()
passed
failed
?mutate
mutate(passed, status = "passed")
passed <- passed %>% mutate(status = "passed")
failed <- failed %>% mutate(status = "failed")
?bind_rows
bind_rows(passed, failed)
sat
submit()
submit()
submit()
R.version
packageVersion(swirl)
packageVersion("swirl")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
library(ggplot2)
install.packages("ggplot2")
library swirl()
library(swirl)
swirl()
library(ggplot2)
head(pollution)
dim(pollution)
summary(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col="blue")
abline(h=12)
hist(ppm, col="green")
rug(ppm)
low
high
hist(ppm, col="green", breaks=100)
rug(ppm)
hist(ppm, col="green")
abline(v=12, lwd=2)
abline(v=median(ppm), col="magenta, lwd=4"
)
abline(v=median(ppm), col="magenta", lwd=4)
names(pollution)
reg <- table(pollution$reg)
reg <- table(pollution$region)
reg
barplot (reg, col="wheat", main = "Number of counties in Each Region")
barplot (reg, col="wheat", main = "Number of Counties in Each Region")
boxpot(pm25~region, data = pollution, col = "red")
boxplot(pm25~region, data = pollution, col = "red")
par(mfrow=c(2, 1))
par( mfrow=c(2,1), mar=c(4,4,2,1))
east <- subset( pollution, region == "east")
head(east)
hist(pm25, col=green)
hist(pollution$pm25, col=green)
hist(east$pm25, col=green)
hist(pm25, col="green")
hist(east$pm25, col="green")
hist(subset(pollution$pm25, region == "west"), col="green")
hist(subset(pollution$pm25, pollution$region == "west"), col="green")
hist(subset(pollution, region == "west")$pm25, col="green")
with (pollution, plot(latitude, pm25))
abline (h=12)
abline (h=12, lwd=2, lty=2)
plot(pollution$latitude, ppm, col=(polltuon$region)
)
plot(pollution$latitude, ppm, col=(pollution$region))
plot(pollution$latitude, ppm, col=(pollution$region))
plot(pollution$latitude, ppm, col=pollution$region)
abline(h=12, lwd=2, lty=2)
par(mfrow=c(1,2), mar=c(5,4,2,1))
west <- subset(pollution, region == "west")
plot(west$lattitude, west$pm25, main="West")
plot(west$lattitude~west$pm25, main="West")
plot(west$lattitude, west$pm25, main="West")
plot(west$latitude~west$pm25, main="West")
plot (west$latitude, west$pm25, main="West")
plot (west$latitude, west$pm25, main="")
plot (east$latitude, east$pm25, main="East")
library(swirl)
swirl()
?Devices
salkj
plot(eruptions, waiting)
plote(east)
plot(east)
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser Data")
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
title(main="Old Faithful Geyser data")
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.copy(png, "geyserplot.png")
dev.copy(png, file = "geyserplot.png")
dev.off()
head(cars)
with(cars, plot(speed, dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data=mpg)
head(airquality)
range(airquality$Ozone, na.rm=TRUE)
hist(airquality$Ozone)
play()
hist(airquality$Ozone)
dev.off()
library(plot)
hist(airquality$Ozone)
?
)
nxt()
table(airquality$Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)", col.axis = "blue", col.lab = "red")
title(main="Ozone and Wind in New York City")
with (airquality, plot(Wind~Ozone))
with (airquality, plot(Wind, Ozone))
title(main="Ozone and Wind in New York City")
par()
length(par())
names(par())
par($pin)
par(
)$pin
par('fg')
par('pch')
par('lty')
plot(airquality$Wind, airquality$Ozone, typeset='n')
plot(airquality$Wind, airquality$Ozone, set='n')
plot(airquality$Wind, type='n', airquality$Ozone, set='n')
plot(airquality$Wind, type='n', airquality$Ozone)
title(main='Wind and Ozone in NYC')
may <- 5
may <- subset(airquality, Month == 5)
?[ch]
?pch
with (may, points(Wind, Ozone, pch=2, col=2))
?col
?points
with (may, points(Wind, Ozone, pch=2, col='blue'))
with (may, points(Wind, Ozone, pch=17, col='blue'))
points(may$Wind, may$Ozone, col='blue', pch=17)
notmay <- subset(airquality, Month != 5)
?pch
points(notmay$Wind, notmay$Ozone, col='red', pch=8)
legend('topright', pch=c(17,8), col=c('blue', 'red'), legend=c('May', 'Other Months') )
anline(v=median(airquality$Wind)m lty=2, lwd=2)
abline(v=median(airquality$Wind)m lty=2, lwd=2)
abline(v=median(airquality$Wind) lty=2, lwd=2)
abline(v=median(airquality$Wind), lty=2, lwd=2)
mfrow(c(1,2))
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main='Ozone and Wind')
plot(airquality$Ozone, airquality$Solar.R, main='Ozone and Solar Radiation')
par(mfrow=c(1,3), mar=c(4,4,2,1), oma=c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main='Ozone and Wind')
plot(airquality$Solar.R, airquality$Ozone, main='Ozone and Solar Radiation')
plot(airquality$Temp, airquality$Ozone, main='Ozone and Temperature')
mtext('Ozone and Weather in New York City', outer=TRUE)
#Make sure the necessary libraries are loaded
#Set the working directory correctly
setwd("~/Desktop/RProjects/Coursera/ExploratoryDataAnalysis/Week1/ExData_Plotting1")
list.files()
# Read in the dataset - a text file called household_power_consumption.txt
power <- read.csv(file="household_power_consumption.txt", sep=';', header=TRUE, na.strings = '?',
colClasses = c('character', 'character', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric' ) )
power[1:100,1]
pwrdat <- power[1:100000, 1]
dim(pwrdat)
pwrdat
length(pwrdat)
pwrdat <- power[, 1]
class(pwrdat)
pwrdat <- as.Date(pwrdat)
class(pwrdat)
pwrtim <- as.Time(power[,2])
pwrtim <- as.Date(power[,2])
swirl()
library(swirl)
swirl()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d1 <- as.Date(1969-01-01"")
d1 <- as.Date('1969-01-01')
d1 <- as.Date("1969-01-01")
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(uncass(t2))
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- c('October 17, 1986 08:24')
t3 <- 'October 17, 1986 08:24'
strptime(t3, '%B %d, %Y %H:%M')
t4 <- strptime(t3, '%B %d, %Y %H:%M')
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units=days)
difftime(Sys.time(), t1, units= 'days')
#Make sure the necessary libraries are loaded
#Set the working directory correctly
setwd("~/Desktop/RProjects/Coursera/ExploratoryDataAnalysis/Week1/ExData_Plotting1")
list.files()
# Read in the dataset - a text file called household_power_consumption.txt
power <- read.csv(file="household_power_consumption.txt", sep=';', header=TRUE, na.strings = '?',
colClasses = c('character', 'character', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric' ) )
power[1:2,]
library(dplyr)
library(tidyr)
power <- tbl_df(power)
power
?mutate
power$Date <- as.Date(power$Date)
?strptime
power
t1 <- power[1,2]
t1
t1 <- as.Date(t1)
t1 <- as.Date(strptime(t1, '%H:%M:%S'))
t1
class(t1)
t1 <- as.POSIXlt(strptime(t1, '%H:%M:%S'))
t1
t1 <- power[1,2]
t1
t1 <- as.POSIXlt(strptime(t1, '%H:%M:%S'))
t1
class(t1)
t1 <- power[1,2]
t1 <- as.POSIXct(strptime(t1, '%H:%M:%S'))
t1
#Make sure the necessary libraries are loaded
#Set the working directory correctly
setwd("~/Desktop/RProjects/Coursera/ExploratoryDataAnalysis/Week1/ExData_Plotting1")
list.files()
readtime <- Sys.time()
readtime
# Read in the dataset - a text file called household_power_consumption.txt
power <- read.csv(file="household_power_consumption.txt", sep=';', header=TRUE, na.strings = '?',
colClasses = c('character', 'character', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric' ) )
# convert variables Date and TIme into the proper format
power$Date <- as.POSIXct(strptime(power$Date, '%m/%d/%Y'))
power$Time <- as.POSIXct(strptime(power$Time, '%H:%M:%S'))
head(power)
class(power$Date)
power$Date
# Read in the dataset - a text file called household_power_consumption.txt
power <- read.csv(file="household_power_consumption.txt", sep=';', header=TRUE, na.strings = '?',
colClasses = c('character', 'character', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric' ) )
d1 <- power[1,1]
d1
t1 <- power[1,2]
t1
dt1 <- c(d1,t1)
dt1
dt1 = paste(d1,t1,sep="")
dt1 = paste(d1,t1,sep=" ")
dt1
datetime <- strptime(dt1, '%d/%m/%Y %HH:%M:%S')
datetime
datetime <- strptime(dt1, '%d %m %Y %HH:%M:%S')
datetime
datetime <- as.POSIXct(dt1)
datetime
datetime <- as.POSIXlt(dt1)
datetime
datetime <- strptime(dt1, '%d/%m/%Y %HH:%M:%S')
datetime
datetime <- strptime(dt1, '%d/%m/%Y')
datetime
datetime <- strptime(dt1, '%d/%m/%Y%H:%M:%S')
datetime
power[1,1:2]
datetime <- as.POSIXct( strptime(dt1, '%d/%m/%Y%H:%M:%S') )
datetime
class(datetime)
?mutate
hed(power)
head(power)
# convert variables Date and TIme into the proper format
power <- tbl_df(power)
# power$Date <- as.POSIXct(strptime(power$Date, '%m/%d/%Y'))
# power$Time <- as.POSIXct(strptime(power$Time, '%H:%M:%S'))
mutate( power, datetime = as.POSIXct( strptime( paste( power$Date, power$Time, sep=" '"), %d/%m/%Y%H:%S:%S) )
mutate( power, datetime = as.POSIXct( strptime( paste( Date, Time, sep=" '"), %d/%m/%Y%H:%S:%S) )
datetime <- as.POSIXct( strptime( paste( power$Date, power$Time, sep=" '"), %d/%m/%Y%H:%S:%S) )
datetime <- paste( power$Date, power$Time, sep=" '")
datetime <- strptime(datetime, '%d/%m/%Y%H:$M:%S')
datetime <- as.POSIXct(datetime)
head(datetime)
datetime <- paste( power$Date, power$Time, sep=" '")
head(datetime)
datetime <- paste( power$Date, power$Time, sep=" ")
datetime <- strptime(datetime, '%d/%m/%Y%H:$M:%S')
datetime <- as.POSIXct(datetime)
head(datetime)
datetime <- paste( power$Date, power$Time, sep=" ")
head(datetime)
datetime <- strptime(datetime, '%d/%m/%Y%H:$M:%S')
head(datetime)
datetime <- paste( power$Date, power$Time, sep=" ")
head(datetime)
datetime <- strptime(datetime, '%d/%m/%Y%H:%M:%S')
head(datetime)
datetime <- as.POSIXct(datetime)
datetime <- as.POSIXct(datetime)
head(datetime)
class(datetime)
mutate(power, DT=datetime)
head(power)
power[1,]
power$dt
power$DT
View(power)
#Make sure the necessary libraries are loaded
library(dplyr)
library(tidyr)
#Set the working directory correctly
setwd("~/Desktop/RProjects/Coursera/ExploratoryDataAnalysis/Week1/ExData_Plotting1")
list.files()
readtime <- Sys.time()
readtime
# Read in the dataset - a text file called household_power_consumption.txt
power <- read.csv(file="household_power_consumption.txt", sep=';', header=TRUE, na.strings = '?',
colClasses = c('character', 'character', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric' ) )
# convert variables Date and TIme into the proper format
power <- tbl_df(power)
# power$Date <- as.POSIXct(strptime(power$Date, '%m/%d/%Y'))
# power$Time <- as.POSIXct(strptime(power$Time, '%H:%M:%S'))
datetime <- paste( power$Date, power$Time, sep=" ")
datetime <- strptime(datetime, '%d/%m/%Y%H:%M:%S')
datetime <- as.POSIXct(datetime)
datetime
?mutate
cbind (datetime,power)
head(power)
power <- cbind (datetime,power)
head(power)
?cbind
mutate(power, DT=datetime)
p2 <- mutate(power, DT=datetime)
View(`p2`)
# Read in the dataset - a text file called household_power_consumption.txt
power <- read.csv(file="household_power_consumption.txt", sep=';', header=TRUE, na.strings = '?',
colClasses = c('character', 'character', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric' ) )
# convert variables Date and TIme into the proper format
power <- tbl_df(power)
# power$Date <- as.POSIXct(strptime(power$Date, '%m/%d/%Y'))
# power$Time <- as.POSIXct(strptime(power$Time, '%H:%M:%S'))
# datetime <- paste( power$Date, power$Time, sep=" ")
# datetime <- strptime(paste( power$Date, power$Time, sep=" "), '%d/%m/%Y%H:%M:%S')
datetime <- as.POSIXct(strptime(paste( power$Date, power$Time, sep=" "), '%d/%m/%Y%H:%M:%S'))
head(datetime)
head(power)
?colname
?cname
?name
?col
?cbind
p2 <- mutate( power, DT = as.POSIXct(strptime(paste( power$Date, power$Time, sep=" "), '%d/%m/%Y%H:%M:%S')) )
head(p2)
View(`p2`)
?mutate
# Read in the dataset - a text file called household_power_consumption.txt
power <- read.csv(file="household_power_consumption.txt", sep=';', header=TRUE, na.strings = '?',
colClasses = c('character', 'character', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric' ) )
# convert variables Date and TIme into the proper format
power <- tbl_df(power)
power <- mutate( power,
DT = as.POSIXct(strptime(paste( power$Date, power$Time, sep=" "), '%d/%m/%Y%H:%M:%S')) )
View(power)
class(power$DT)
power <- select(10, 1:9)
power <- select(power, 10, 1:9)
head(power)
# Read in the dataset - a text file called household_power_consumption.txt
power <- read.csv(file="household_power_consumption.txt", sep=';', header=TRUE, na.strings = '?',
colClasses = c('character', 'character', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric' ) )
# convert variables Date and Time into the proper format, make that be the first column
power <- tbl_df(power)
power <- select (mutate( power,
DateTime = as.POSIXct(strptime(paste( power$Date, power$Time, sep=" "), '%d/%m/%Y%H:%M:%S')) ),
10:1:9 )
# Read in the dataset - a text file called household_power_consumption.txt
power <- read.csv(file="household_power_consumption.txt", sep=';', header=TRUE, na.strings = '?',
colClasses = c('character', 'character', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric' ) )
# convert variables Date and Time into the proper format, make that be the first column
power <- tbl_df(power)
power <-mutate ( power,
DateTime = as.POSIXct(strptime(paste( power$Date, power$Time, sep=" "), '%d/%m/%Y%H:%M:%S')) )
View(power)
power <- select(power, 10, 3:9, 1:2)
head(power)
#Filter the 2M observqtions down to the ones of interest
startdate <- as.POSIXct('2007-02-01')
enddate <- as.POSIXct('2007-02-02')
p2 <- filter(power, DateTime > startdate & DateTime < enddate)
head(p2)
tail(p2)
head(power)
?write.csv
save(power, "power.rda")
save (p2, "p2.rda")
write (power, file = "power.csv", sep="," )
write (p2, file="p2.csv", spe=",")
?save
save(power, file = "power.rda")
save (p2, file = "p2.rda")
write (power, file = "power.csv", sep="," )
?write.csv
write.table(power, file="power.csv",append=FALSE,quote=TRUE,sep=",",
eol="\n",na="NA",dec=".",row.names=FALSE, col.names=TRUE,
qmethod=c("escape","double"), fileEncoding="")
write.table(p2, file="p2.csv",append=FALSE,quote=TRUE,sep=",",
eol="\n",na="NA",dec=".",row.names=FALSE, col.names=TRUE,
qmethod=c("escape","double"), fileEncoding="")
list.files()
source('~/Desktop/RProjects/Coursera/ExploratoryDataAnalysis/Week1/ExData_Plotting1/loaddata.R', echo=TRUE)
